module signatures/CLikeLanguage-sig

imports
  signatures/Common-sig


signature
  sorts
    Variable Expression Code Parameter

  constructors
    Program                  : ID * List(Program) -> Start
                             : Variable -> Program
    Structure                : List(Variable) * ID -> Program
    Function                 : Type * ID * List(Parameter) * CodeBlock -> Program
    Statement                : Statement -> Program
    Block                    : List(Statement) -> CodeBlock
    If                       : Expression * Statement * Option(IfElse) -> Statement
    While                    : Expression * Statement -> Statement
    Attribution              : ID * Expression -> Statement
    Break                    : Statement
    Return                   : Expression -> Statement
                             : CodeBlock -> Statement
    Single                   : Statement -> IfElse
    Declaration              : Type * ID -> Variable
    DeclarationArray         : Type * ID * INT -> Variable
    DeclarationInst          : Type * ID * Expression -> Variable
    Parameter                : Type * ID -> Parameter
    Separator                : Parameter * Parameter -> Parameter
    Parameter                : Expression -> Argument
    Separator                : Expression * Expression -> Argument
    Add                      : Expression * OperatorTerm * Expression -> Expression
    Mul                      : Expression * OperatorFactor * Expression -> Expression
    Logic                    : Expression * OperatorComparator * Expression -> Expression
    Primitive                : Primitive -> Expression
    Expression               : Expression -> Expression
                             : INT -> Primitive
                             : CHAR -> Primitive
                             : BOOLEAN -> Primitive
                             : ID -> Primitive
    Function                 : ID * List(Argument) -> Primitive
    Add                      : OperatorTerm
    Sub                      : OperatorTerm
    Mul                      : OperatorFactor
    Div                      : OperatorFactor
    Equal                    : OperatorComparator
    Diff                     : OperatorComparator
    GT                       : OperatorComparator
    GTE                      : OperatorComparator
    LT                       : OperatorComparator
    LTE                      : OperatorComparator
    And                      : OperatorComparator
    Or                       : OperatorComparator
    Void                     : Type
    Integer                  : Type
    Char                     : Type
    Boolean                  : Type
    printPrimitive           : Primitive -> BasicFunction
    scan                     : List(INPUT) * List(ID) -> BasicFunction
    Start-Plhdr              : Start
    Program-Plhdr            : Program
    CodeBlock-Plhdr          : CodeBlock
    IfElse-Plhdr             : IfElse
    Statement-Plhdr          : Statement
    Variable-Plhdr           : Variable
    Parameter-Plhdr          : Parameter
    Expression-Plhdr         : Expression
    INT-Plhdr                : INT
    CHAR-Plhdr               : CHAR
    BOOLEAN-Plhdr            : BOOLEAN
    Argument-Plhdr           : Argument
    OperatorTerm-Plhdr       : OperatorTerm
    OperatorFactor-Plhdr     : OperatorFactor
    OperatorComparator-Plhdr : OperatorComparator
    Type-Plhdr               : Type
    Primitive-Plhdr          : Primitive
    BasicFunction-Plhdr      : BasicFunction
    INPUT-Plhdr              : INPUT
    ID-Plhdr                 : ID
    Start-Plhdr              : COMPLETION-INSERTION -> Start
    Program-Plhdr            : COMPLETION-INSERTION -> Program
    CodeBlock-Plhdr          : COMPLETION-INSERTION -> CodeBlock
    IfElse-Plhdr             : COMPLETION-INSERTION -> IfElse
    Statement-Plhdr          : COMPLETION-INSERTION -> Statement
    Variable-Plhdr           : COMPLETION-INSERTION -> Variable
    Parameter-Plhdr          : COMPLETION-INSERTION -> Parameter
    Expression-Plhdr         : COMPLETION-INSERTION -> Expression
    INT-Plhdr                : COMPLETION-INSERTION -> INT
    CHAR-Plhdr               : COMPLETION-INSERTION -> CHAR
    BOOLEAN-Plhdr            : COMPLETION-INSERTION -> BOOLEAN
    Argument-Plhdr           : COMPLETION-INSERTION -> Argument
    OperatorTerm-Plhdr       : COMPLETION-INSERTION -> OperatorTerm
    OperatorFactor-Plhdr     : COMPLETION-INSERTION -> OperatorFactor
    OperatorComparator-Plhdr : COMPLETION-INSERTION -> OperatorComparator
    Type-Plhdr               : COMPLETION-INSERTION -> Type
    Primitive-Plhdr          : COMPLETION-INSERTION -> Primitive
    BasicFunction-Plhdr      : COMPLETION-INSERTION -> BasicFunction
    INPUT-Plhdr              : COMPLETION-INSERTION -> INPUT
    ID-Plhdr                 : COMPLETION-INSERTION -> ID
    Program-Opt-Plhdr        : Program
    Variable-Opt-Plhdr       : Variable
    Parameter-Opt-Plhdr      : Parameter
    Statement-Opt-Plhdr      : Statement
    IfElse-Opt-Plhdr         : IfElse
    Argument-Opt-Plhdr       : Argument
    INPUT-Opt-Plhdr          : INPUT
    ID-Opt-Plhdr             : ID