module ds-signatures/CLikeLanguage-sig

imports ds-signatures/Common-sig

signature
    sorts
      Start
      Program
      CodeBlock
      Statement
      IfElse
      Variable
      Parameter
      Argument
      Expression
      Primitive
      OperatorTerm
      OperatorFactor
      OperatorComparator
      Type
      BasicFunction
    constructors
      Program : ID * List(Program) -> Start 
      __Variable2Program__ : Variable -> Program {implicit}
      Structure : List(Variable) * ID -> Program 
      Function : Type * ID * List(Parameter) * CodeBlock -> Program 
      Statement : Statement -> Program 
      Block : List(Statement) -> CodeBlock 
      If : Expression * Statement * IfElse -> Statement 
      While : Expression * Statement -> Statement 
      Attribution : ID * Expression -> Statement 
      Break : Statement 
      Return : Expression -> Statement 
      __CodeBlock2Statement__ : CodeBlock -> Statement {implicit}
      Single : Statement -> IfElse 
      Declaration : Type * ID -> Variable 
      DeclarationArray : Type * ID * INT -> Variable 
      DeclarationInst : Type * ID * Expression -> Variable 
      Parameter : Type * ID -> Parameter 
      Separator : Parameter * Parameter -> Parameter 
      Parameter : Expression -> Argument 
      Separator : Expression * Expression -> Argument 
      Add : Expression * OperatorTerm * Expression -> Expression 
      Mul : Expression * OperatorFactor * Expression -> Expression 
      Logic : Expression * OperatorComparator * Expression -> Expression 
      Primitive : Primitive -> Expression 
      Expression : Expression -> Expression 
      __INT2Primitive__ : INT -> Primitive {implicit}
      __CHAR2Primitive__ : CHAR -> Primitive {implicit}
      __BOOLEAN2Primitive__ : BOOLEAN -> Primitive {implicit}
      __ID2Primitive__ : ID -> Primitive {implicit}
      Function : ID * List(Argument) -> Primitive 
      Add : OperatorTerm 
      Sub : OperatorTerm 
      Mul : OperatorFactor 
      Div : OperatorFactor 
      Equal : OperatorComparator 
      Diff : OperatorComparator 
      GT : OperatorComparator 
      GTE : OperatorComparator 
      LT : OperatorComparator 
      LTE : OperatorComparator 
      And : OperatorComparator 
      Or : OperatorComparator 
      Void : Type 
      Integer : Type 
      Char : Type 
      Boolean : Type 
      printPrimitive : Primitive -> BasicFunction 
      scan : List(INPUT) * List(ID) -> BasicFunction 