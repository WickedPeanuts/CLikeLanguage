Module("analysis",[Rules([RDefNoArgs("editor-analyze",Rule(NoAnnoList(Tuple([Var("ast"),Var("path"),Var("project-path")])),NoAnnoList(Tuple([Var("ast'"),Var(ListVar("error*")),Var(ListVar("warning*")),Var(ListVar("info*"))])),[WithClause(Seq(Assign(Var("ast'"),App(Id,Var("ast"))),Seq(Assign(Var(ListVar("error*")),App(Call(SVar("collect-all"),[CallNoArgs(SVar("constraint-error"))]),Var("ast'"))),Seq(Assign(Var(ListVar("warning*")),App(Call(SVar("collect-all"),[CallNoArgs(SVar("constraint-warning"))]),Var("ast'"))),Assign(Var(ListVar("info*")),App(Call(SVar("collect-all"),[CallNoArgs(SVar("constraint-info"))]),Var("ast'")))))))])),SDefNoArgs("constraint-error",Fail),SDefNoArgs("constraint-warning",Fail),SDefNoArgs("constraint-info",Fail)]),Rules([RDefNoArgs("editor-resolve",RuleNoCond(NoAnnoList(Tuple([Var("node"),Var("position"),Var("ast"),Var("path"),Var("project-path")])),RootApp(Fail))),RDefNoArgs("editor-hover",RuleNoCond(NoAnnoList(Tuple([Var("node"),Var("position"),Var("ast"),Var("path"),Var("project-path")])),RootApp(Fail)))]),Rules([RDefNoArgs("debug-show-analyzed",Rule(NoAnnoList(Tuple([Wld,Wld,Var("ast"),Var("path"),Wld])),NoAnnoList(Tuple([Var("filename"),Var("result")])),[WithClause(Seq(Assign(Var("filename"),App(CallT(SVar("guarantee-extension"),[],[NoAnnoList(Str("\"analyzed.aterm\""))]),Var("path"))),Assign(Var("result"),Var("ast"))))]))])])