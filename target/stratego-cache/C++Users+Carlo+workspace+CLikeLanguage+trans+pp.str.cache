Module("pp",[Imports([Import("libstratego-gpp"),Import("libspoofax/sdf/pp"),ImportWildcard("libspoofax/editor/refactoring"),Import("pp/CLikeLanguage-parenthesize"),Import("pp/CLikeLanguage-pp")]),Rules([RDefNoArgs("editor-format",Rule(NoAnnoList(Tuple([Var("node"),Wld,Var("ast"),Var("path"),Var("project-path")])),NoAnnoList(Tuple([Var("filename"),Var("result")])),[WithClause(Seq(Assign(Var("ext"),App(CallNoArgs(SVar("get-extension")),Var("path"))),Seq(Assign(Var("filename"),App(CallT(SVar("guarantee-extension"),[],[NoAnnoList(StringQuotation1("                                          ",[QStr("pp."),StringEscape1("                                             ",Var("ext"))]))]),Var("path"))),Assign(Var("result"),App(CallNoArgs(SVar("pp-debug")),Var("node"))))))]))]),Rules([SDefNoArgs("pp-CLikeLanguage-string",Seq(CallNoArgs(SVar("parenthesize-CLikeLanguage")),Seq(CallNoArgs(SVar("prettyprint-CLikeLanguage-start-symbols")),Seq(Build(NoAnnoList(Op("V",[NoAnnoList(List([])),RootApp(Id)]))),CallT(SVar("box2text-string"),[],[NoAnnoList(Int("120"))]))))),SDefNoArgs("pp-partial-CLikeLanguage-string",Seq(CallNoArgs(SVar("parenthesize-CLikeLanguage")),Seq(CallNoArgs(SVar("prettyprint-CLikeLanguage")),Seq(Build(NoAnnoList(Op("V",[NoAnnoList(List([])),RootApp(Id)]))),CallT(SVar("box2text-string"),[],[NoAnnoList(Int("120"))]))))),SDefT("pp-partial-CLikeLanguage-string",[],[DefaultVarDec("sort")],Seq(CallNoArgs(SVar("parenthesize-CLikeLanguage")),Seq(CallT(SVar("prettyprint-CLikeLanguage"),[],[Var("sort")]),Seq(Build(NoAnnoList(Op("V",[NoAnnoList(List([])),RootApp(Id)]))),CallT(SVar("box2text-string"),[],[NoAnnoList(Int("120"))]))))),RDefNoArgs("pp-debug",Rule(Var("ast"),Var("result"),[WithClause(LChoice(Assign(Var("result"),App(CallNoArgs(SVar("pp-CLikeLanguage-string")),Var("ast"))),Seq(BA(Call(SVar("bottomup"),[Call(SVar("try"),[Seq(Not(CallNoArgs(SVar("is-string"))),Seq(Not(CallNoArgs(SVar("is-list"))),Seq(Not(CallNoArgs(SVar("pp-CLikeLanguage-string"))),Call(SVar("debug"),[Build(NoAnnoList(Str("\"cannot pp \"")))]))))])]),Var("ast")),Assign(Var("result"),NoAnnoList(Str("\"\""))))))]))]),Rules([SDefNoArgs("construct-textual-change",Call(SVar("construct-textual-change"),[CallNoArgs(SVar("pp-partial-CLikeLanguage-string")),CallNoArgs(SVar("parenthesize")),CallNoArgs(SVar("override-reconstruction")),CallNoArgs(SVar("resugar"))]))])])