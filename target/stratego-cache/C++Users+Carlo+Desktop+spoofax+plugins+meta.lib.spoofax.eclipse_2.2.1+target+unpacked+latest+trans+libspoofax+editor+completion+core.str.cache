Module("libspoofax/editor/completion/core",[Imports([Import("libspoofax/term/origin"),Import("libspoofax/editor/completion/interface"),ImportWildcard("libspoofax/editor/refactoring"),Import("libstratego-gpp")]),Signature([Constructors([OpDecl("INSERTION_TERM",FunType([ConstType(SortNoArgs("NewTerm"))],ConstType(SortNoArgs("AST_CHANGE")))),OpDecl("REPLACE_TERM",FunType([ConstType(SortNoArgs("OldTerm")),ConstType(SortNoArgs("NewTerm"))],ConstType(SortNoArgs("AST_CHANGE"))))])]),Signature([Constructors([OpDecl("CURSOR_ELEMENT",ConstType(SortVar("cursor")))])]),Rules([SDefNoArgs("get-parent-non-amb",Prim("\"SSL_EXT_get_parent_not_amb\"",[RootApp(Id)])),SDefNoArgs("is-bracket-node",Prim("\"SSL_EXT_is_bracket_node\"",[RootApp(Id)]))]),Rules([SDefT("add-completions",[],[DefaultVarDec("suggestion")],CallT(SVar("iset-add"),[],[Var("suggestion")])),SDefT("add-list-completions",[],[DefaultVarDec(ListVar("suggestion*"))],CallT(SVar("iset-addlist"),[],[Var(ListVar("suggestion*"))])),SDefT("wrap-term",[],[DefaultVarDec("new-cons")],Seq(Match(Var("t")),Build(NoAnnoList(Explode(Var("new-cons"),Var("t")))))),SDefT("inline-completions",[],[DefaultVarDec("sort")],Fail),RDefNoArgs("find-position",Rule(NoAnnoList(Tuple([Var("term"),Var("parent")])),Var("index"),Seq(Assign(Var("args"),App(CallNoArgs(SVar("get-arguments")),Var("parent"))),Assign(Var("index"),App(CallT(SVar("get-index-origin"),[],[NoAnnoList(Int("1"))]),NoAnnoList(Tuple([Var("term"),Var("args")]))))))),RDefT("get-index-origin",[],[DefaultVarDec("idx")],Rule(NoAnnoList(Tuple([Var("term"),NoAnnoList(ListTail([Var("h")],Var("hs")))])),Var("index"),Seq(Assign(NoAnnoList(Tuple([Var("start-offset-term"),Var("end-offset-term")])),App(CallNoArgs(SVar("origin-offset")),Var("term"))),Seq(Assign(NoAnnoList(Tuple([Var("start-offset"),Var("end-offset")])),App(CallNoArgs(SVar("origin-offset")),Var("h"))),CondChoice(BA(Match(NoAnnoList(Tuple([Var("start-offset"),Var("end-offset")]))),NoAnnoList(Tuple([Var("start-offset-term"),Var("end-offset-term")]))),Assign(Var("index"),Var("idx")),Assign(Var("index"),App(CallT(SVar("get-index-origin"),[],[App(CallNoArgs(SVar("inc")),Var("idx"))]),NoAnnoList(Tuple([Var("term"),Var("hs")]))))))))),RDefT("get-index-origin",[],[DefaultVarDec("idx")],RuleNoCond(NoAnnoList(Tuple([Var("term"),NoAnnoList(List([]))])),NoAnnoList(Int("-1")))),RDefT("get-index-cursor-position",[],[DefaultVarDec("idx")],Rule(NoAnnoList(Tuple([Var("position"),NoAnnoList(ListTail([Var("h")],Var("hs")))])),Var("index"),Seq(Assign(NoAnnoList(Tuple([Var("start-offset"),Var("end-offset")])),App(CallNoArgs(SVar("origin-offset")),Var("h"))),CondChoice(BA(CallNoArgs(SVar("leq")),NoAnnoList(Tuple([Var("position"),Var("start-offset")]))),Assign(Var("index"),Var("idx")),Assign(Var("index"),App(CallT(SVar("get-index-cursor-position"),[],[App(CallNoArgs(SVar("inc")),Var("idx"))]),NoAnnoList(Tuple([Var("position"),Var("hs")])))))))),RDefT("match-node-origin",[],[DefaultVarDec("node")],Rule(Var("t"),RootApp(Id),Seq(Assign(NoAnnoList(Tuple([Var("start-offset"),Var("end-offset")])),App(CallNoArgs(SVar("origin-offset")),Var("node"))),Seq(Assign(NoAnnoList(Tuple([Var("start-offset-term"),Var("end-offset-term")])),App(CallNoArgs(SVar("origin-offset")),Var("t"))),BA(Match(NoAnnoList(Tuple([Var("start-offset"),Var("end-offset"),Var("node")]))),NoAnnoList(Tuple([Var("start-offset-term"),Var("end-offset-term"),Var("t")]))))))),RDefT("get-index-cursor-position",[],[DefaultVarDec("idx")],RuleNoCond(NoAnnoList(Tuple([Var("position"),NoAnnoList(List([]))])),Var("idx"))),RDefT("my-position-of-term",[DefaultVarDec("is-term")],[DefaultVarDec("start-index")],RuleNoCond(NoAnnoList(List([])),RootApp(Fail))),RDef("my-position-of-term",[DefaultVarDec("is-term")],Rule(NoAnnoList(Explode(Wld,Var(ListVar("t*")))),App(CallT(SVar("my-position-of-term"),[CallNoArgs(SVar("is-term"))],[NoAnnoList(Int("0"))]),Var(ListVar("t*"))),Seq(Not(CallNoArgs(SVar("is-term"))),Not(Match(NoAnnoList(List([]))))))),RDef("my-position-of-term",[DefaultVarDec("is-term")],Rule(Var("t"),NoAnnoList(List([])),CallNoArgs(SVar("is-term")))),RDefT("my-position-of-term",[DefaultVarDec("is-term")],[DefaultVarDec("start-index")],Rule(NoAnnoList(ListTail([Var("t")],Var(ListVar("t*")))),Var("position"),CondChoice(Assign(Var(ListVar("i*")),App(Call(SVar("my-position-of-term"),[CallNoArgs(SVar("is-term"))]),Var("t"))),Assign(Var("position"),NoAnnoList(ListTail([Var("start-index")],Var(ListVar("i*"))))),Assign(Var("position"),App(CallT(SVar("my-position-of-term"),[CallNoArgs(SVar("is-term"))],[App(CallNoArgs(SVar("inc")),Var("start-index"))]),Var(ListVar("t*"))))))),SDefNoArgs("check-blank-line",Id),RDefT("calculate-leading-ws",[DefaultVarDec("leading-ws")],[DefaultVarDec("term")],Rule(NoAnnoList(Tuple([Var("parent"),Var("index")])),App(CallNoArgs(SVar("leading-ws")),NoAnnoList(Tuple([Var("parent"),Var("index")]))),BA(Not(CallNoArgs(SVar("get-parent"))),Var("parent")))),RDefT("calculate-leading-ws",[DefaultVarDec("leading-ws")],[DefaultVarDec("term")],Rule(NoAnnoList(Tuple([Var("parent"),Var("index")])),Var("result"),[WhereClause(Assign(Var("parent'"),App(CallNoArgs(SVar("get-parent")),Var("parent")))),WhereClause(Seq(Assign(NoAnnoList(Tuple([Var("start-offset-term"),Wld])),App(CallNoArgs(SVar("origin-offset")),Var("term"))),Seq(Assign(NoAnnoList(Tuple([Var("start-offset-parent"),Wld])),App(CallNoArgs(SVar("origin-offset")),Var("parent"))),CondChoice(BA(CallNoArgs(SVar("eq")),NoAnnoList(Tuple([Var("start-offset-term"),Var("start-offset-parent")]))),CondChoice(BA(CallNoArgs(SVar("is-list")),Var("parent'")),Seq(Assign(Var("parent-list"),App(CallNoArgs(SVar("get-parent")),Var("parent'"))),Seq(Assign(Var("index'"),App(CallNoArgs(SVar("find-position")),NoAnnoList(Tuple([Var("parent'"),Var("parent-list")])))),Assign(Var("result"),App(CallT(SVar("calculate-leading-ws"),[CallNoArgs(SVar("leading-ws"))],[Var("parent'")]),NoAnnoList(Tuple([Var("parent-list"),Var("index'")])))))),Seq(Assign(Var("index'"),App(CallNoArgs(SVar("find-position")),NoAnnoList(Tuple([Var("parent"),Var("parent'")])))),Assign(Var("result"),App(CallT(SVar("calculate-leading-ws"),[CallNoArgs(SVar("leading-ws"))],[Var("parent")]),NoAnnoList(Tuple([Var("parent'"),Var("index'")])))))),Assign(Var("result"),App(CallNoArgs(SVar("leading-ws")),NoAnnoList(Tuple([Var("parent"),Var("index")]))))))))]))])])