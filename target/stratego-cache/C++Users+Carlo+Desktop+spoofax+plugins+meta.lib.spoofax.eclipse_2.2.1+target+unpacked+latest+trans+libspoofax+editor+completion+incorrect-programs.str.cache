Module("libspoofax/editor/completion/incorrect-programs",[Imports([Import("libspoofax/editor/completion/core"),Import("libspoofax/editor/completion/interface"),Import("libspoofax/editor/refactoring/layout-adaption"),Import("libspoofax/editor/refactoring/construct-text"),Import("libspoofax/editor/refactoring/construct-initial-list-structure"),Import("libspoofax/term/origin"),Import("libspoofax/term/annotation")]),Signature([Constructors([OpDecl("INSERTION_TERM",FunType([ConstType(SortNoArgs("NewTerm"))],ConstType(SortNoArgs("AST_CHANGE")))),OpDecl("REPLACE_TERM_TEXT",FunType([ConstType(SortNoArgs("OldTerm")),ConstType(SortNoArgs("String"))],ConstType(SortNoArgs("AST_CHANGE"))))])]),Rules([RDef("get-proposals-incorrect-programs",[DefaultVarDec("pp"),DefaultVarDec("parenthesize"),DefaultVarDec("indent"),DefaultVarDec("leading-ws"),DefaultVarDec("separator")],Rule(NoAnnoList(Tuple([Var("sort"),Var("new-ast"),Var("completion-term"),Var("topmost-amb"),Var("parenthesized")])),NoAnnoList(Tuple([Var("name"),Var("text"),Var("additionalInfo"),Var("change"),Var("completion-term"),Var("kind")])),Seq(Assign(Var("change"),App(LChoice(CallNoArgs(SVar("calculate-completion-change-incorrect")),CallT(SVar("create-insertion-or-replace"),[],[Var("topmost-amb")])),Var("completion-term"))),Seq(Assign(Var("text"),App(CallT(SVar("build-description-incorrect-programs"),[CallNoArgs(SVar("pp")),CallNoArgs(SVar("parenthesize")),CallNoArgs(SVar("indent")),CallNoArgs(SVar("leading-ws")),CallNoArgs(SVar("separator"))],[Var("parenthesized")]),Var("change"))),Seq(Assign(Var("name"),App(CallNoArgs(SVar("get-constructor")),Var("completion-term"))),Seq(Assign(Var("additionalInfo"),App(CallNoArgs(SVar("pp")),Var("parenthesized"))),Assign(Var("kind"),NoAnnoList(Str("\"recovery\""))))))))),RDefT("create-insertion-or-replace",[],[DefaultVarDec("topmost-amb")],Rule(Var("completion-term"),NoAnnoList(Op("INSERTION_TERM",[App(Call(SVar("try"),[CallNoArgs(SVar("wrap-optional"))]),Var("completion-term"))])),BA(Match(Var("topmost-amb")),Var("completion-term")))),RDefT("create-insertion-or-replace",[],[DefaultVarDec("topmost-amb")],Rule(Var("completion-term"),NoAnnoList(Op("REPLACE_TERM",[Var("topmost-amb"),App(Call(SVar("try"),[CallNoArgs(SVar("wrap-optional"))]),Var("completion-term"))])),BA(Not(Match(Var("topmost-amb"))),Var("completion-term")))),SDefNoArgs("wrap-optional",Seq(CallNoArgs(SVar("get-parent-non-amb")),Match(NoAnnoList(Op("Some",[Wld]))))),RDefNoArgs("calculate-completion-change-incorrect",Rule(Var("completion-term"),Var("change"),Seq(Assign(Var("parent"),App(Seq(CallNoArgs(SVar("get-parent-non-amb")),CallNoArgs(SVar("is-list"))),Var("completion-term"))),Seq(Assign(Var("index"),App(CallT(SVar("get-index-origin"),[],[NoAnnoList(Int("1"))]),NoAnnoList(Tuple([Var("completion-term"),Var("parent")])))),Seq(Assign(Var("length"),App(CallNoArgs(SVar("length")),Var("parent"))),CondChoice(BA(CallNoArgs(SVar("geq")),NoAnnoList(Tuple([Var("index"),Var("length")]))),Assign(Var("change"),NoAnnoList(Op("INSERT_AT_END",[Var("parent"),Var("completion-term")]))),Assign(Var("change"),NoAnnoList(Op("INSERT_BEFORE",[App(CallT(SVar("index"),[],[App(CallNoArgs(SVar("inc")),Var("index"))]),Var("parent")),Var("completion-term")]))))))))),RDef("get-proposals-incorrect-programs-nested",[DefaultVarDec("pp"),DefaultVarDec("parenthesize"),DefaultVarDec("indent"),DefaultVarDec("leading-ws"),DefaultVarDec("separator")],Rule(NoAnnoList(Tuple([Var("sort"),Var("new-ast"),Var("completion-term"),Var("nestedCompletionName"),Var("replacement"),Var("parenthesized")])),NoAnnoList(Tuple([Var("name"),Var("text"),Var("additionalInfo"),Var("change"),Var("completion-term")])),Seq(Assign(Var("name"),App(CallNoArgs(SVar("concat-strings")),NoAnnoList(List([App(CallNoArgs(SVar("get-constructor")),Var("completion-term")),NoAnnoList(Str("\"-\"")),Var("nestedCompletionName")])))),Seq(Assign(NoAnnoList(Tuple([Var("completion-term'"),Var("change")])),App(CallT(SVar("create-change-nested-completion"),[],[Var("parenthesized")]),NoAnnoList(Tuple([Var("completion-term"),Var("replacement")])))),Seq(Assign(Var("text"),App(CallT(SVar("build-description-incorrect-programs"),[CallNoArgs(SVar("pp")),CallNoArgs(SVar("parenthesize")),CallNoArgs(SVar("indent")),CallNoArgs(SVar("leading-ws")),CallNoArgs(SVar("separator"))],[Var("completion-term'")]),Var("change"))),Assign(Var("additionalInfo"),App(CallNoArgs(SVar("pp")),Var("completion-term'")))))))),RDefT("create-change-nested-completion",[],[DefaultVarDec("parenthesized")],Rule(NoAnnoList(Tuple([Var("term"),Var("replace-change")])),NoAnnoList(Tuple([Var("completion-term-replaced"),Var("change")])),Seq(Assign(Var(ListVar("args*")),App(Seq(CallNoArgs(SVar("get-arguments")),Match(NoAnnoList(List([Var("subterm"),Var("replacement")])))),Var("replace-change"))),Seq(Assign(Var("completion-term-replaced"),App(Call(SVar("topdown"),[Call(SVar("try"),[Seq(CallT(SVar("match-node-origin"),[],[Var("subterm")]),BA(CallNoArgs(SVar("trim-whitespace")),Var("replacement")))])]),Var("parenthesized"))),Assign(Var("change"),App(LChoice(CallNoArgs(SVar("calculate-completion-change-incorrect")),CallT(SVar("create-insertion-or-replace"),[],[Var("parenthesized")])),Var("completion-term-replaced"))))))),RDef("get-proposals-incorrect-programs-single-placeholder",[DefaultVarDec("pp"),DefaultVarDec("parenthesize"),DefaultVarDec("indent"),DefaultVarDec("leading-ws"),DefaultVarDec("separator")],Rule(NoAnnoList(Tuple([Var("sort"),Var("new-ast"),Var("completion-term"),Var("topmost-amb"),Var("parenthesized"),Var("placeholder"),Var("placeholder-term")])),Var(ListVar("proposal'*")),Seq(Assign(Var("suggestion-is"),RootApp(CallNoArgs(SVar("new-iset")))),Seq(Assign(Var(ListVar("suggestion*")),App(Seq(Call(SVar("try"),[CallT(SVar("suggest-completions"),[],[Var("suggestion-is")])]),BA(CallNoArgs(SVar("iset-elements")),Var("suggestion-is"))),Var("placeholder"))),Seq(CondChoice(Assign(NoAnnoList(List([])),Var(ListVar("suggestion*"))),Assign(Var(ListVar("suggestion'*")),NoAnnoList(List([NoAnnoList(Tuple([App(CallNoArgs(SVar("get-constructor")),Var("placeholder")),Var("placeholder")]))]))),Assign(Var(ListVar("suggestion'*")),Var(ListVar("suggestion*")))),Seq(Assign(Var(ListVar("input*")),App(Call(SVar("map"),[CallT(SVar("replace-expansion-completion-term"),[],[Var("sort"),Var("new-ast"),Var("completion-term"),Var("topmost-amb"),Var("parenthesized"),Var("placeholder-term")])]),Var(ListVar("suggestion'*")))),Seq(Assign(Var(ListVar("proposal*")),App(Call(SVar("map"),[Call(SVar("get-proposals-incorrect-programs"),[CallNoArgs(SVar("pp")),CallNoArgs(SVar("parenthesize")),CallNoArgs(SVar("indent")),CallNoArgs(SVar("leading-ws")),CallNoArgs(SVar("separator"))])]),Var(ListVar("input*")))),Assign(Var(ListVar("proposal'*")),App(Call(SVar("zip"),[CallNoArgs(SVar("rename-proposal"))]),NoAnnoList(Tuple([Var(ListVar("proposal*")),Var(ListVar("suggestion'*"))]))))))))))),RDefT("replace-expansion-completion-term",[],[DefaultVarDec("sort"),DefaultVarDec("new-ast"),DefaultVarDec("completion-term"),DefaultVarDec("topmost-amb"),DefaultVarDec("parenthesized"),DefaultVarDec("placeholder-term")],Rule(NoAnnoList(Tuple([Var("name"),Var("expansion")])),NoAnnoList(Tuple([Var("sort"),Var("new-ast"),Var("completion-term"),Var("topmost-amb"),Var("parenthesized'")])),Assign(Var("parenthesized'"),App(Call(SVar("topdown"),[Call(SVar("try"),[Call(SVar("origin-track-forced"),[Call(SVar("preserve-annotations-attachments"),[CallT(SVar("expand-completion-term"),[],[Var("placeholder-term"),Var("expansion")])])])])]),Var("parenthesized"))))),RDefNoArgs("rename-proposal",Rule(NoAnnoList(Tuple([NoAnnoList(Tuple([Var("name"),Var("text"),Var("additionalInfo"),Var("change"),Var("completion-term"),Var("kind")])),Var("suggestion")])),NoAnnoList(Tuple([Var("name'"),Var("text"),Var("additionalInfo"),Var("change"),Var("completion-term"),Var("kind'")])),Seq(BA(Match(NoAnnoList(Tuple([Var("name'"),Wld]))),Var("suggestion")),Assign(Var("kind'"),NoAnnoList(Str("\"expansionEditing\"")))))),RDefT("expand-completion-term",[],[DefaultVarDec("placeholder-term"),DefaultVarDec("expansion")],RuleNoCond(Var("placeholder-term"),Var("expansion")))]),Rules([RDefT("build-description-incorrect-programs",[DefaultVarDec("pp"),DefaultVarDec("parenthesize"),DefaultVarDec("indent"),DefaultVarDec("leading-ws"),DefaultVarDec("separator")],[DefaultVarDec("parenthesized")],Rule(NoAnnoList(Op("INSERT_AT_END",[Var("old-list"),Var("completion-term")])),Var("text"),[WhereClause(BA(Match(NoAnnoList(List([Wld]))),Var("old-list"))),WhereClause(Seq(Assign(Var("parent"),App(Seq(CallNoArgs(SVar("get-parent-non-amb")),Not(CallNoArgs(SVar("is-list")))),Var("old-list"))),Assign(Var("index"),App(CallNoArgs(SVar("find-position")),NoAnnoList(Tuple([Var("old-list"),Var("parent")])))))),WithClause(Seq(Assign(Var("leading-ws"),App(CallNoArgs(SVar("leading-ws")),NoAnnoList(Tuple([Var("parent"),Var("index")])))),Seq(Assign(Var("indent"),App(CallNoArgs(SVar("indent")),NoAnnoList(Tuple([Var("parent"),Var("index")])))),Seq(Assign(Var("parent-indent"),App(LChoice(CallNoArgs(SVar("origin-indent")),Build(NoAnnoList(Str("\"\"")))),Var("parent"))),Seq(Assign(Var("reconstructed-text"),App(CallNoArgs(SVar("pp")),Var("parenthesized"))),CondChoice(BA(Call(SVar("is-substring"),[Build(NoAnnoList(Str("\"\\n\"")))]),Var("leading-ws")),Assign(Var("text"),App(CallNoArgs(SVar("concat-strings")),NoAnnoList(List([Var("leading-ws"),App(Seq(CallT(SVar("replace-indentation"),[],[Var("indent"),NoAnnoList(Str("\"\""))]),CallT(SVar("prefix-lines"),[],[Var("parent-indent")])),Var("reconstructed-text"))])))),Assign(Var("text"),App(CallNoArgs(SVar("concat-strings")),NoAnnoList(List([Var("leading-ws"),App(CallT(SVar("replace-indentation"),[],[Var("indent"),NoAnnoList(Str("\"\""))]),Var("reconstructed-text"))]))))))))))])),RDefT("build-description-incorrect-programs",[DefaultVarDec("pp"),DefaultVarDec("parenthesize"),DefaultVarDec("indent"),DefaultVarDec("leading-ws"),DefaultVarDec("separator")],[DefaultVarDec("parenthesized")],Rule(NoAnnoList(Op("INSERT_AT_END",[Var("old-list"),Var("completion-term")])),Var("text"),[WhereClause(BA(Match(NoAnnoList(List([Wld]))),Var("old-list"))),WhereClause(Seq(Assign(Var("parent"),App(Seq(CallNoArgs(SVar("get-parent-non-amb")),CallNoArgs(SVar("is-list"))),Var("old-list"))),Seq(Assign(Var("list-parent"),App(CallNoArgs(SVar("get-parent-non-amb")),Var("parent"))),Assign(Var("index"),App(CallNoArgs(SVar("find-position")),NoAnnoList(Tuple([Var("parent"),Var("list-parent")]))))))),WithClause(Seq(Assign(Var("leading-ws"),App(CallNoArgs(SVar("leading-ws")),NoAnnoList(Tuple([Var("list-parent"),Var("index")])))),Seq(Assign(Var("indent"),App(CallNoArgs(SVar("indent")),NoAnnoList(Tuple([Var("list-parent"),Var("index")])))),Seq(Assign(Var("parent-indent"),App(LChoice(CallNoArgs(SVar("origin-indent")),Build(NoAnnoList(Str("\"\"")))),Var("list-parent"))),Seq(Assign(Var("reconstructed-text"),App(CallNoArgs(SVar("pp")),Var("parenthesized"))),CondChoice(BA(Call(SVar("is-substring"),[Build(NoAnnoList(Str("\"\\n\"")))]),Var("leading-ws")),Assign(Var("text"),App(CallNoArgs(SVar("concat-strings")),NoAnnoList(List([Var("leading-ws"),App(Seq(CallT(SVar("replace-indentation"),[],[Var("indent"),NoAnnoList(Str("\"\""))]),CallT(SVar("prefix-lines"),[],[Var("parent-indent")])),Var("reconstructed-text"))])))),Assign(Var("text"),App(CallNoArgs(SVar("concat-strings")),NoAnnoList(List([Var("leading-ws"),App(CallT(SVar("replace-indentation"),[],[Var("indent"),NoAnnoList(Str("\"\""))]),Var("reconstructed-text"))]))))))))))])),RDefT("build-description-incorrect-programs",[DefaultVarDec("pp"),DefaultVarDec("parenthesize"),DefaultVarDec("indent"),DefaultVarDec("leading-ws"),DefaultVarDec("separator")],[DefaultVarDec("parenthesized")],Rule(NoAnnoList(Op("INSERT_AT_END",[Var("old-list"),Var("completion-term")])),Var("text"),[WhereClause(BA(Not(Match(NoAnnoList(List([Wld])))),Var("old-list"))),WhereClause(Seq(Assign(Var("parent"),App(Seq(CallNoArgs(SVar("get-parent-non-amb")),Not(CallNoArgs(SVar("is-list")))),Var("old-list"))),Assign(Var("index"),App(CallNoArgs(SVar("find-position")),NoAnnoList(Tuple([Var("old-list"),Var("parent")])))))),WithClause(Seq(Assign(Var("sep"),App(CallNoArgs(SVar("separator")),NoAnnoList(Tuple([Var("parent"),Var("index")])))),Seq(Assign(Var("indent"),App(CallNoArgs(SVar("indent")),NoAnnoList(Tuple([Var("parent"),Var("index")])))),Seq(Assign(Var("parent-indent"),App(LChoice(CallNoArgs(SVar("origin-indent")),Build(NoAnnoList(Str("\"\"")))),Var("parent"))),Seq(Assign(Var("reconstructed-text"),App(CallNoArgs(SVar("pp")),Var("parenthesized"))),Seq(Assign(Var("separator"),App(CallNoArgs(SVar("concat-strings")),NoAnnoList(List([Var("sep"),Var("indent")])))),CondChoice(BA(Call(SVar("is-substring"),[Build(NoAnnoList(Str("\"\\n\"")))]),Var("separator")),Assign(Var("text"),App(CallNoArgs(SVar("concat-strings")),NoAnnoList(List([Var("sep"),App(CallT(SVar("prefix-lines"),[],[App(CallNoArgs(SVar("conc-strings")),NoAnnoList(Tuple([Var("indent"),Var("parent-indent")])))]),Var("reconstructed-text"))])))),Assign(Var("text"),App(CallNoArgs(SVar("concat-strings")),NoAnnoList(List([Var("sep"),App(CallT(SVar("prefix-lines"),[],[Var("indent")]),Var("reconstructed-text"))])))))))))))])),RDefT("build-description-incorrect-programs",[DefaultVarDec("pp"),DefaultVarDec("parenthesize"),DefaultVarDec("indent"),DefaultVarDec("leading-ws"),DefaultVarDec("separator")],[DefaultVarDec("parenthesized")],Rule(NoAnnoList(Op("INSERT_AT_END",[Var("old-list"),Var("completion-term")])),Var("text"),[WhereClause(BA(Not(Match(NoAnnoList(List([Wld])))),Var("old-list"))),WhereClause(Seq(Assign(Var("parent"),App(Seq(CallNoArgs(SVar("get-parent-non-amb")),CallNoArgs(SVar("is-list"))),Var("old-list"))),Seq(Assign(Var("list-parent"),App(CallNoArgs(SVar("get-parent-non-amb")),Var("parent"))),Assign(Var("index"),App(CallNoArgs(SVar("find-position")),NoAnnoList(Tuple([Var("parent"),Var("list-parent")]))))))),WithClause(Seq(Assign(Var("sep"),App(CallNoArgs(SVar("separator")),NoAnnoList(Tuple([Var("list-parent"),Var("index")])))),Seq(Assign(Var("indent"),App(CallNoArgs(SVar("indent")),NoAnnoList(Tuple([Var("list-parent"),Var("index")])))),Seq(Assign(Var("parent-indent"),App(LChoice(CallNoArgs(SVar("origin-indent")),Build(NoAnnoList(Str("\"\"")))),Var("list-parent"))),Seq(Assign(Var("reconstructed-text"),App(CallNoArgs(SVar("pp")),Var("parenthesized"))),Seq(Assign(Var("separator"),App(CallNoArgs(SVar("concat-strings")),NoAnnoList(List([Var("sep"),Var("indent")])))),CondChoice(BA(Call(SVar("is-substring"),[Build(NoAnnoList(Str("\"\\n\"")))]),Var("separator")),Assign(Var("text"),App(CallNoArgs(SVar("concat-strings")),NoAnnoList(List([Var("sep"),App(CallT(SVar("prefix-lines"),[],[App(CallNoArgs(SVar("conc-strings")),NoAnnoList(Tuple([Var("indent"),Var("parent-indent")])))]),Var("reconstructed-text"))])))),Assign(Var("text"),App(CallNoArgs(SVar("concat-strings")),NoAnnoList(List([Var("sep"),App(CallT(SVar("prefix-lines"),[],[Var("indent")]),Var("reconstructed-text"))])))))))))))])),RDefT("build-description-incorrect-programs",[DefaultVarDec("pp"),DefaultVarDec("parenthesize"),DefaultVarDec("indent"),DefaultVarDec("leading-ws"),DefaultVarDec("separator")],[DefaultVarDec("parenthesized")],Rule(NoAnnoList(Op("INSERT_BEFORE",[Var("old-node"),Var("completion-term")])),Var("text"),[WhereClause(Seq(Assign(Var("parent"),App(CallNoArgs(SVar("get-parent-non-amb")),Var("old-node"))),Seq(Assign(Var("grandparent"),App(Seq(CallNoArgs(SVar("get-parent-non-amb")),Not(CallNoArgs(SVar("is-list")))),Var("parent"))),Assign(Var("index-parent"),App(CallNoArgs(SVar("find-position")),NoAnnoList(Tuple([Var("parent"),Var("grandparent")]))))))),WithClause(Seq(Assign(Var("index-completion-term"),App(CallT(SVar("get-index-origin"),[],[NoAnnoList(Int("1"))]),NoAnnoList(Tuple([Var("completion-term"),Var("parent")])))),Seq(Assign(Var("sep"),App(CallNoArgs(SVar("separator")),NoAnnoList(Tuple([Var("grandparent"),Var("index-parent")])))),Seq(Assign(Var("indent"),App(CallNoArgs(SVar("indent")),NoAnnoList(Tuple([Var("grandparent"),Var("index-parent")])))),Seq(Assign(Var("leading-ws"),App(CallNoArgs(SVar("leading-ws")),NoAnnoList(Tuple([Var("grandparent"),Var("index-parent")])))),Seq(Assign(Var("grandparent-indent"),App(LChoice(CallNoArgs(SVar("origin-indent")),Build(NoAnnoList(Str("\"\"")))),Var("grandparent"))),Seq(Assign(Var("reconstructed-text"),App(CallNoArgs(SVar("pp")),Var("parenthesized"))),Seq(CondChoice(BA(Call(SVar("is-substring"),[Build(NoAnnoList(Str("\"\\n\"")))]),Var("leading-ws")),Assign(Var("leading-ws-indent"),Var("grandparent-indent")),Assign(Var("leading-ws-indent"),NoAnnoList(Str("\"\"")))),Seq(CondChoice(BA(Call(SVar("is-substring"),[Build(NoAnnoList(Str("\"\\n\"")))]),Var("sep")),Assign(Var("separator-indent"),App(CallNoArgs(SVar("concat-strings")),NoAnnoList(List([Var("indent"),Var("grandparent-indent")])))),Assign(Var("separator-indent"),App(CallNoArgs(SVar("concat-strings")),NoAnnoList(List([Var("indent")]))))),CondChoice(BA(Match(NoAnnoList(Int("1"))),Var("index-completion-term")),Assign(Var("text"),App(CallNoArgs(SVar("concat-strings")),NoAnnoList(List([Var("leading-ws"),App(Seq(CallT(SVar("replace-indentation"),[],[Var("indent"),NoAnnoList(Str("\"\""))]),CallT(SVar("prefix-lines"),[],[Var("leading-ws-indent")])),Var("reconstructed-text")),Var("sep"),Var("separator-indent")])))),Assign(Var("text"),App(CallNoArgs(SVar("concat-strings")),NoAnnoList(List([Var("sep"),App(CallT(SVar("prefix-lines"),[],[Var("separator-indent")]),Var("reconstructed-text")),Var("sep"),Var("separator-indent")]))))))))))))))])),RDefT("build-description-incorrect-programs",[DefaultVarDec("pp"),DefaultVarDec("parenthesize"),DefaultVarDec("indent"),DefaultVarDec("leading-ws"),DefaultVarDec("separator")],[DefaultVarDec("parenthesized")],Rule(NoAnnoList(Op("INSERT_BEFORE",[Var("old-node"),Var("completion-term")])),Var("text"),[WhereClause(Seq(Assign(Var("parent"),App(CallNoArgs(SVar("get-parent-non-amb")),Var("old-node"))),Seq(Assign(Var("grandparent"),App(Seq(CallNoArgs(SVar("get-parent-non-amb")),CallNoArgs(SVar("is-list"))),Var("parent"))),Seq(Assign(Var("grandparent-list"),App(CallNoArgs(SVar("get-parent-non-amb")),Var("grandparent"))),Assign(Var("index-parent"),App(CallNoArgs(SVar("find-position")),NoAnnoList(Tuple([Var("grandparent"),Var("grandparent-list")])))))))),WithClause(Seq(Assign(Var("index-completion-term"),App(CallT(SVar("get-index-origin"),[],[NoAnnoList(Int("1"))]),NoAnnoList(Tuple([Var("completion-term"),Var("parent")])))),Seq(Assign(Var("sep"),App(CallNoArgs(SVar("separator")),NoAnnoList(Tuple([Var("grandparent-list"),Var("index-parent")])))),Seq(Assign(Var("indent"),App(CallNoArgs(SVar("indent")),NoAnnoList(Tuple([Var("grandparent-list"),Var("index-parent")])))),Seq(Assign(Var("leading-ws"),App(CallNoArgs(SVar("leading-ws")),NoAnnoList(Tuple([Var("grandparent-list"),Var("index-parent")])))),Seq(Assign(Var("grandparent-indent"),App(LChoice(CallNoArgs(SVar("origin-indent")),Build(NoAnnoList(Str("\"\"")))),Var("grandparent-list"))),Seq(Assign(Var("reconstructed-text"),App(CallNoArgs(SVar("pp")),Var("parenthesized"))),Seq(CondChoice(BA(Call(SVar("is-substring"),[Build(NoAnnoList(Str("\"\\n\"")))]),Var("leading-ws")),Assign(Var("leading-ws-indent"),Var("grandparent-indent")),Assign(Var("leading-ws-indent"),NoAnnoList(Str("\"\"")))),Seq(CondChoice(BA(Call(SVar("is-substring"),[Build(NoAnnoList(Str("\"\\n\"")))]),Var("sep")),Assign(Var("separator-indent"),App(CallNoArgs(SVar("concat-strings")),NoAnnoList(List([Var("indent"),Var("grandparent-indent")])))),Assign(Var("separator-indent"),App(CallNoArgs(SVar("concat-strings")),NoAnnoList(List([Var("indent")]))))),CondChoice(BA(Match(NoAnnoList(Int("1"))),Var("index-completion-term")),Assign(Var("text"),App(CallNoArgs(SVar("concat-strings")),NoAnnoList(List([Var("leading-ws"),App(Seq(CallT(SVar("replace-indentation"),[],[Var("indent"),NoAnnoList(Str("\"\""))]),CallT(SVar("prefix-lines"),[],[Var("leading-ws-indent")])),Var("reconstructed-text")),Var("sep"),Var("separator-indent")])))),Assign(Var("text"),App(CallNoArgs(SVar("concat-strings")),NoAnnoList(List([Var("sep"),App(CallT(SVar("prefix-lines"),[],[Var("separator-indent")]),Var("reconstructed-text")),Var("sep"),Var("separator-indent")]))))))))))))))])),RDefT("build-description-incorrect-programs",[DefaultVarDec("pp"),DefaultVarDec("parenthesize"),DefaultVarDec("indent"),DefaultVarDec("leading-ws"),DefaultVarDec("separator")],[DefaultVarDec("parenthesized")],Rule(NoAnnoList(Op("INSERTION_TERM",[Var("completion-term")])),Var("text"),Seq(BA(CallNoArgs(SVar("get-parent")),Var("completion-term")),Seq(Assign(Var("parent"),App(CallNoArgs(SVar("get-parent-non-amb")),Var("completion-term"))),Seq(Assign(Var("index"),App(CallNoArgs(SVar("find-position")),NoAnnoList(Tuple([Var("completion-term"),Var("parent")])))),Seq(Assign(Var("leading-ws"),App(CallNoArgs(SVar("leading-ws")),NoAnnoList(Tuple([Var("parent"),Var("index")])))),Seq(Assign(Var("indent"),App(CallNoArgs(SVar("indent")),NoAnnoList(Tuple([Var("parent"),Var("index")])))),Seq(Assign(Var("parent-indent"),App(LChoice(CallNoArgs(SVar("origin-indent")),Build(NoAnnoList(Str("\"\"")))),Var("parent"))),Seq(Assign(Var("reconstructed-text"),App(Seq(LChoice(Match(NoAnnoList(Op("Some",[RootApp(Id)]))),Id),CallNoArgs(SVar("pp"))),Var("parenthesized"))),CondChoice(BA(Call(SVar("is-substring"),[Build(NoAnnoList(Str("\"\\n\"")))]),Var("leading-ws")),Assign(Var("text"),App(CallNoArgs(SVar("concat-strings")),NoAnnoList(List([Var("leading-ws"),App(Seq(CallT(SVar("replace-indentation"),[],[Var("indent"),NoAnnoList(Str("\"\""))]),CallT(SVar("prefix-lines"),[],[Var("parent-indent")])),Var("reconstructed-text"))])))),Assign(Var("text"),App(CallNoArgs(SVar("concat-strings")),NoAnnoList(List([Var("leading-ws"),App(CallT(SVar("replace-indentation"),[],[App(CallNoArgs(SVar("conc-strings")),NoAnnoList(Tuple([Var("indent"),Var("parent-indent")]))),NoAnnoList(Str("\"\""))]),Var("reconstructed-text"))])))))))))))))),RDefT("build-description-incorrect-programs",[DefaultVarDec("pp"),DefaultVarDec("parenthesize"),DefaultVarDec("indent"),DefaultVarDec("leading-ws"),DefaultVarDec("separator")],[DefaultVarDec("parenthesized")],Rule(NoAnnoList(Op("INSERTION_TERM",[Var("completion-term")])),Var("reconstructed-text"),Seq(BA(Not(CallNoArgs(SVar("get-parent"))),Var("completion-term")),Assign(Var("reconstructed-text"),App(CallNoArgs(SVar("pp")),Var("parenthesized")))))),RDefT("build-description-incorrect-programs",[DefaultVarDec("pp"),DefaultVarDec("parenthesize"),DefaultVarDec("indent"),DefaultVarDec("leading-ws"),DefaultVarDec("separator")],[DefaultVarDec("parenthesized")],Rule(NoAnnoList(Op("REPLACE_TERM",[Var("term"),Var("completion-term")])),App(CallT(SVar("replace-indentation"),[],[Var("old-indent"),NoAnnoList(Str("\"\""))]),Var("text")),Seq(Assign(Var("text"),App(CallNoArgs(SVar("pp")),Var("parenthesized"))),Assign(Var("old-indent"),App(LChoice(CallNoArgs(SVar("origin-indent")),Build(NoAnnoList(Str("\"\"")))),Var("term"))))))])])