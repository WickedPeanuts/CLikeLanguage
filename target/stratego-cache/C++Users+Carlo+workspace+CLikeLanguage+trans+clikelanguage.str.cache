Module("clikelanguage",[Imports([Import("signatures/CLikeLanguage-sig"),Import("completion/completion"),Import("pp"),Import("outline"),Import("analysis")]),Rules([RDefNoArgs("debug-show-aterm",Rule(NoAnnoList(Tuple([Var("node"),Wld,Wld,Var("path"),Var("project-path")])),NoAnnoList(Tuple([Var("filename"),Var("result")])),[WithClause(Seq(Assign(Var("filename"),App(CallT(SVar("guarantee-extension"),[],[NoAnnoList(Str("\"aterm\""))]),Var("path"))),Assign(Var("result"),Var("node"))))])),RDefNoArgs("gera-xgcc",RuleNoCond(NoAnnoList(Tuple([Var("node"),Var("position"),Var("ast"),Var("path"),Var("project-path")])),NoAnnoList(Tuple([NoAnnoList(Str("\"assembly.txt\"")),App(CallNoArgs(SVar("gera-prog")),Var("ast"))])))),RDefNoArgs("gera-prog",RuleNoCond(NoAnnoList(Op("Program",[Var("i"),Var("ld")])),NoAnnoList(StringQuotation1("       ",[QStr("\n       .file	1	\"assembly.c\"\n       .section	.mdebug.abi32\n       .previous\n       \n       "),StringEscape1("       ",App(CallNoArgs(SVar("gera-variaveisGlobais")),NoAnnoList(Tuple([Var("ld")])))),QStr("\n       \n       .ident \"GCC: (GNU) 4.9.0\"\n     ")])))),RDefNoArgs("gera-program",RuleNoCond(NoAnnoList(List([])),NoAnnoList(StringQuotation1("            ",[])))),RDefNoArgs("gera-program",RuleNoCond(NoAnnoList(Tuple([Var("a")])),NoAnnoList(StringQuotation1("             ",[QStr("asdf "),StringEscape1("                  ",Var("a"))])))),RDefNoArgs("gera-program",RuleNoCond(NoAnnoList(List([NoAnnoList(Tuple([Var("head"),Var("tail")]))])),NoAnnoList(StringQuotation1("                       ",[StringEscape1("                       ",Var("head")),QStr(" "),StringEscape1("                              ",App(CallNoArgs(SVar("gera-variaveisGlobais")),Var("tail")))])))),RDefNoArgs("gera-variaveisGlobais",RuleNoCond(NoAnnoList(List([])),NoAnnoList(StringQuotation1("  	        ",[])))),RDefNoArgs("gera-variaveisGlobais",RuleNoCond(NoAnnoList(Tuple([Var("a")])),NoAnnoList(StringQuotation1("             ",[QStr("asdf "),StringEscape1("                  ",Var("a"))])))),RDefNoArgs("gera-variaveisGlobais",RuleNoCond(NoAnnoList(List([NoAnnoList(Tuple([Var("head"),Var("tail")]))])),NoAnnoList(StringQuotation1("                       ",[StringEscape1("                       ",Var("head")),QStr(" "),StringEscape1("                              ",App(CallNoArgs(SVar("gera-variaveisGlobais")),Var("tail")))]))))])])